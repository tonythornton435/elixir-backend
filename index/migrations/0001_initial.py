# Generated by Django 4.0.3 on 2022-05-14 14:58

import uuid

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ConsentRequest",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("request_note", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("WITHDRAWN", "Withdrawn"),
                        ],
                        default="PENDING",
                        max_length=16,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Facility",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(
                        max_length=13,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+254712345678'.",
                                regex="^\\+254\\d{9}$",
                            )
                        ],
                    ),
                ),
                ("address", models.TextField()),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=128)),
                (
                    "county",
                    models.CharField(
                        choices=[
                            ("MOMBASA", "Mombasa"),
                            ("KWALE", "Kwale"),
                            ("KILIFI", "Kilifi"),
                            ("TANA_RIVER", "Tana River"),
                            ("LAMU", "Lamu"),
                            ("TAITA_TAVETA", "Taita-Taveta"),
                            ("GARISSA", "Garissa"),
                            ("WAJIR", "Wajir"),
                            ("MANDERA", "Mandera"),
                            ("MARSABIT", "Marsabit"),
                            ("ISIOLO", "Isiolo"),
                            ("MERU", "Meru"),
                            ("THARAKA_NITHI", "Tharaka-Nithi"),
                            ("EMBU", "Embu"),
                            ("KITUI", "Kitui"),
                            ("MACHAKOS", "Machakos"),
                            ("MAKUENI", "Makueni"),
                            ("NYANDARUA", "Nyandarua"),
                            ("NYERI", "Nyeri"),
                            ("KIRINYAGA", "Kirinyaga"),
                            ("MURANGA", "Murang'a"),
                            ("KIAMBU", "Kiambu"),
                            ("TURKANA", "Turkana"),
                            ("WEST_POKOT", "West Pokot"),
                            ("SAMBURU", "Samburu"),
                            ("TRANS_NZOIA", "Trans-Nzoia"),
                            ("UASIN_GISHU", "Uasin Gishu"),
                            ("ELGEYO_MARAKWET", "Elgeyo-Marakwet"),
                            ("NANDI", "Nandi"),
                            ("BARINGO", "Baringo"),
                            ("LAIKIPIA", "Laikipia"),
                            ("NAKURU", "Nakuru"),
                            ("NAROK", "Narok"),
                            ("KAJIADO", "Kajiado"),
                            ("KERICHO", "Kericho"),
                            ("BOMET", "Bomet"),
                            ("KAKAMEGA", "Kakamega"),
                            ("VIHIGA", "Vihiga"),
                            ("BUNGOMA", "Bungoma"),
                            ("BUSIA", "Busia"),
                            ("SIAYA", "Siaya"),
                            ("KISUMU", "Kisumu"),
                            ("HOMA_BAY", "Homa Bay"),
                            ("MIGORI", "Migori"),
                            ("KISII", "Kisii"),
                            ("NYAMIRA", "Nyamira"),
                            ("NAIROBI", "Nairobi"),
                        ],
                        max_length=32,
                    ),
                ),
                ("location", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("HOSP", "Hospital"),
                            ("PSY", "Psychiatry Clinic"),
                            ("RH", "Rehabilitation Hospital"),
                            ("MBL", "Medical Laboratory"),
                            ("PHARM", "Pharmacy"),
                            ("PEDC", "Pediatrics Clinic"),
                            ("OPTC", "Optometry Clinic"),
                            ("DENT", "Dental Clinic"),
                        ],
                        max_length=32,
                    ),
                ),
                ("api_base_url", models.URLField(verbose_name="API Base URL")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Practitioner",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PHYSICIAN", "Physician"),
                            ("NURSE", "Nurse"),
                            ("LAB_TECHNICIAN", "Lab Technician"),
                            ("SURGEON", "Surgeon"),
                            ("PHARMACIST", "Pharmacist"),
                            ("DENTIST", "Dentist"),
                            ("OPTICIAN", "Optician"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Record",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("creation_time", models.DateTimeField()),
                (
                    "visit_type",
                    models.CharField(
                        choices=[
                            ("OUTPATIENT", "Outpatient"),
                            ("INPATIENT", "Inpatient"),
                            ("DENTAL", "Dental"),
                            ("OPTICAL", "Optical"),
                        ],
                        max_length=16,
                    ),
                ),
                ("is_released", models.BooleanField(default=True)),
                (
                    "facility",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="records",
                        to="index.facility",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tenure",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("start", models.DateField(default=django.utils.timezone.now)),
                ("end", models.DateField(null=True)),
                (
                    "facility",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="index.facility",
                    ),
                ),
                (
                    "practitioner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="employment_history",
                        to="index.practitioner",
                    ),
                ),
            ],
            options={
                "ordering": ["-start"],
                "unique_together": {("practitioner", "facility", "start")},
            },
        ),
        migrations.CreateModel(
            name="RecordRating",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "accuracy",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                (
                    "completeness",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("review", models.TextField()),
                (
                    "rater",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="ratings",
                        to="index.record",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConsentRequestTransition",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "from_state",
                    models.TextField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                        ],
                        max_length=16,
                    ),
                ),
                (
                    "to_state",
                    models.TextField(
                        choices=[
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("WITHDRAWN", "Withdrawn"),
                        ],
                        max_length=16,
                    ),
                ),
                ("transition_time", models.DateTimeField(auto_now_add=True)),
                (
                    "consent_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="transition_logs",
                        to="index.consentrequest",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="consentrequest",
            name="record",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="consent_requests",
                to="index.record",
            ),
        ),
        migrations.AddField(
            model_name="consentrequest",
            name="requestor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="index.tenure"
            ),
        ),
        migrations.CreateModel(
            name="AccessLog",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("access_time", models.DateTimeField(auto_now_add=True)),
                (
                    "practitioner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="index.tenure"
                    ),
                ),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="access_logs",
                        to="index.record",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
